/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.GraphicsEnvironment;
import java.awt.image.BufferedImage;
import model.Imagem;
import util.*;
/**
 *
 * @author FREE
 */
public class imagemPanel extends javax.swing.JPanel {
    private BufferedImage buffer = null;
    /**
     * Creates new form imagemPanel
     */
    
    public imagemPanel(Imagem imagem){
        initComponents();
        if (imagem!=null){
            changeImage(imagem,-1);
        }
    }
    
    private BufferedImage hacksToCompatibleImage(BufferedImage image)
    {
        // obtain the current system graphical settings
        GraphicsConfiguration gfx_config = GraphicsEnvironment.
            getLocalGraphicsEnvironment().getDefaultScreenDevice().
            getDefaultConfiguration();

        /*
         * if image is already compatible and optimized for current system 
         * settings, simply return it
         */
        if (image.getColorModel().equals(gfx_config.getColorModel()))
            return image;

        // image is not optimized, so create a new image that is
        BufferedImage new_image = gfx_config.createCompatibleImage(
                image.getWidth(), image.getHeight(), image.getTransparency());

        // get the graphics context of the new image to draw the old image on
        Graphics2D g2d = (Graphics2D) new_image.getGraphics();

        // actually draw the image and dispose of context no longer needed
        g2d.drawImage(image, 0, 0, null);
        g2d.dispose();

        // return the new optimized image
        return new_image; 
    }
    
    public void changeImage(Imagem img,int codigo){
            PTimer inicio = new PTimer("changeImage tempo");
            //System.out.println(img.testPrint());
            inicio.startTimer();
            try{

                int imagemWidth = img.getWidth();
                int imagemHeight = img.getHeight();

                if (buffer==null){
                    buffer = new BufferedImage(imagemWidth,imagemHeight,BufferedImage.TYPE_INT_RGB);
                }
                
                byte[] aux = new byte[3];
                for (int i=0;i<imagemHeight;i++){
                        for (int j=0;j<imagemWidth;j++){
                            aux[0] = img.getB()[i][j];
                            aux[1] = img.getG()[i][j];
                            aux[2] = img.getR()[i][j];
                            buffer.setRGB(j, (imagemHeight-1-i), Cor.getValorInt(aux));
                        }
                    }
                this.setPreferredSize(new Dimension(buffer.getWidth(),buffer.getHeight()));
                this.setSize(this.getPreferredSize());
                this.repaint();
                }
            catch(Exception e){
                System.out.println("Erro imagemPanel");
                e.printStackTrace();
            }finally{
                inicio.endTimer();
                //System.out.println(img.testPrint());
                System.out.println(inicio);
            }
    }
    
    @Override
    public void paint(Graphics g)
    {
        if (!(buffer==null)){
            //System.out.println("DRAWING");
            g.drawImage(buffer, 0, 0, this);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
